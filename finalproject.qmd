---
title: "Analysis of food costs in female-headed households"
date: last-modified
execute: 
  eval: true
  warning: false
  message: false
format:
  html:
    toc: true
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(ggplot2)
library(here)
library(kableExtra)
library(car)
library(broom)
```

```{r}
food <- read_csv(here("data","food_affordability_2006_2010.csv"))
counties <- read.csv(here("data","california_counties.csv"))
```

#### Data Cleaning

Drop NAs for median income and visualize min and max to see if outliers must be removed

```{r}
food <- food %>%
 filter(!is.na(median_income)) %>% # removed all median_income NAs as they are crucial for lm 
  select(-region_name) %>%  # removed MPO region names
  filter(race_eth_name == c("Total","Latino","White","AfricanAm"))

summary(food$cost_yr) 
summary(food$median_income) 

food <- food %>%
  filter(median_income < 120000) %>% # remove outliers, several in the 200000s
  mutate(log_income = log(median_income))
```

#### Reclassify counties into 5 regions, not 15

```{r}
superior <- c("Butte","Colusa","Del Norte","Glenn","Humboldt","Lake","Lassen","Mendocino","Modoc","Nevada","Plumas","Shasta", "Sierra","Siskiyou","Tehama","Trinity")

central <- c("Alpine","Amador","El Dorado","Fresno","Inyo","Kings","Madera","Mariposa","Merced","Mono","Placer","Sacramento","San Joaquin","Stanislaus","Sutter","Yuba","Tulare","Tuolumne","Yolo", "Calaveras")

bay_area <- c("Almeda","Contra Costa","Marin","Monterey","Napa","San Benito","San Fracisco","San Mateo","Santa Clara","Santa Cruz","Solano","Sonoma")

southern <- c("Imperial","Kern","Orange","Riverside","San Bernardino","San Diego","San Luis Obispo","Santa Barbara","Ventura")

los_angeles <- "Los Angeles"

region_mapping <- data.frame(
  county_name = c(superior, central, bay_area, southern, los_angeles),
  region_name = rep(c('superior', 'central', 'bay_area', 'southern','los_angeles'), 
               times = c(length(superior), length(central), length(bay_area), length(southern),length(los_angeles))))

food <- inner_join(food,
                   region_mapping,
                   by = "county_name")
```

#### Histograms to visualize data

```{r}
# Create histogram for food cost
cost_hist <- ggplot(food, aes(x = cost_yr)) +
  geom_histogram(binwidth = 100, fill = "lightblue") +
  labs(title = "Histogram of food cost",
       x = "Food cost",
       y = "Frequency") +
  theme_bw() +
  theme(text = element_text(family = "courier"),
        panel.background = element_rect(fill = "white")) +
  geom_vline(aes(xintercept = mean(cost_yr)),
            color = "black",
            lwd = 0.5) +
  geom_vline(aes(xintercept = median(cost_yr)),
            color = "indianred2",
            lwd = 0.5)

cost_hist
```

```{r}
# Create histogram for income 
income_hist <- ggplot(food, aes(x = median_income)) +
  geom_histogram(binwidth = 1000, fill = "lightblue") +
  labs(title = "Histogram of median income",
       x = "Median income",
       y = "Frequency") +
  theme_bw() +
  theme(text = element_text(family = "courier"),
        panel.background = element_rect(fill = "white")) +
  geom_vline(aes(xintercept = mean(median_income)),
            color = "black",
            lwd = 0.5) +
  geom_vline(aes(xintercept = median(median_income)),
            color = "indianred2",
            lwd = 0.5)

income_hist
```

#### Testing the null hypothesis

-   Null Hypothesis (H0): Region does not have a significant effect on food cost.

-   Alternative Hypothesis (H1): Region does have a significant effect on food cost.

```{r}
cost_summary <- food %>%
  group_by(region_name) %>%
  summarize(median_cost = median(cost_yr, na.rm = TRUE))

# Calculate the point estimate of the difference in median income between two regions
point_estimate_cost <- cost_summary$median_cost[2] - cost_summary$median_cost[1]

point_estimate_cost # the diff between 2 regions

```

#### Randomization test

```{r}
# Set the seed for reproducibility
set.seed(123)

# Create the null distribution with 1000 permutations
null_dist_1 <- replicate(10000, {
  shuffled_data <- food %>%
    mutate(cost_yr = sample(cost_yr, n()))
  

  shuffled_summary <- shuffled_data %>%
    group_by(region_name) %>%
    summarize(median_cost = median(cost_yr, na.rm = TRUE))
  
  point_estimate <- shuffled_summary$median_cost[2] - shuffled_summary$median_cost[1]

  point_estimate
})

observed_point_estimate <- point_estimate_cost

# plot the null distribution
region_1_2 <- ggplot(tibble(null_dist_1), aes(null_dist_1)) +
  geom_histogram(bins = 20, color = "skyblue", fill = "indianred2") +
  geom_vline(xintercept = observed_point_estimate, color = "indianred2") +
  ggtitle("Null Distribution of Median Cost Differences") +
  xlab("Difference in Median Cost") +
  ylab("Frequency") +
  theme_bw() +
   theme(text = element_text(family = "courier"))

region_1_2

```

###### Regions 3 & 4 

```{r}
# Set the seed for reproducibility
set.seed(123)

# Create the null distribution with 1000 permutations
null_dist_2 <- replicate(10000, {
  shuffled_data <- food %>%
    mutate(cost_yr = sample(cost_yr, n()))
  

  shuffled_summary <- shuffled_data %>%
    group_by(region_name) %>%
    summarize(median_cost = median(cost_yr, na.rm = TRUE))
  
  point_estimate <- shuffled_summary$median_cost[3] - shuffled_summary$median_cost[4]

  point_estimate
})

observed_point_estimate <- point_estimate_cost

# plot the null distribution
region_3_4 <- ggplot(tibble(null_dist_2), aes(null_dist_2)) +
  geom_histogram(bins = 20, color = "skyblue", fill = "indianred2") +
  geom_vline(xintercept = observed_point_estimate, color = "indianred2") +
  ggtitle("Null Distribution of Median Cost Differences") +
  xlab("Difference in Median Cost") +
  ylab("Frequency") +
  theme_bw() +
   theme(text = element_text(family = "courier"))

region_3_4
```

###### Regions 4 & 5 

```{r}
# Set the seed for reproducibility
set.seed(123)

# Create the null distribution with 1000 permutations
null_dist_3 <- replicate(10000, {
  shuffled_data <- food %>%
    mutate(cost_yr = sample(cost_yr, n()))
  

  shuffled_summary <- shuffled_data %>%
    group_by(region_name) %>%
    summarize(median_cost = median(cost_yr, na.rm = TRUE))
  
  point_estimate <- shuffled_summary$median_cost[4] - shuffled_summary$median_cost[5]

  point_estimate
})

observed_point_estimate <- point_estimate_cost

# plot the null distribution
region_4_5 <- ggplot(tibble(null_dist_3), aes(null_dist_3)) +
  geom_histogram(bins = 20, color = "skyblue", fill = "indianred2") +
  geom_vline(xintercept = observed_point_estimate, color = "indianred2") +
  ggtitle("Null Distribution of Median Cost Differences") +
  xlab("Difference in Median Cost") +
  ylab("Frequency") +
  theme_bw() +
   theme(text = element_text(family = "courier"))

region_4_5
```

#### Find p-value

```{r}
# Calculate the p-value

p_value_1 <- mean(abs(null_dist_1) >= abs(observed_point_estimate))
options(digits = 10)  # Increase precision for the output
print(p_value_1)

p_value_2 <- mean(abs(null_dist_2) >= abs(observed_point_estimate))
options(digits = 10)  # Increase precision for the output
print(p_value_2)

p_value_3 <- mean(abs(null_dist_3) >= abs(observed_point_estimate))
options(digits = 10)  # Increase precision for the output
print(p_value_3)
```

#### Apply lm model where independent variable is food cost, predictors are region, avg. family size and interaction between region and median income

```{r results='asis'}
cost_lm <- lm(cost_yr ~ region_name + ave_fam_size + log_income, data = food)

cost_lm_summary <- tidy(cost_lm) %>%
  kable(col.names = c("Variable","Estimate","Std.Error", "Statistic","p.value")) %>%
  kable_styling(full_width = FALSE,
                bootstrap_options = "bordered",
                html_font = "courier") %>%
  print()
```

#### Plot interaction between family size and log income

```{r}
interaction_plot <- ggplot(food, aes(x = cost_yr, y = region_name, color = log_income)) +
  geom_point(alpha = 0.5) +
  labs(title = "Interaction between food cost and region",
       x = "Food cost",
       y = "Region",
       color = "log(income)") +
  theme_bw() +
  theme(text = element_text(family = "courier"))

interaction_plot
```

```{r}
residuals_region <- ggplot(data = food, aes(x = region_name, y = resid(cost_lm))) +
  geom_point(color = "lightblue",
             fill = "indianred2",
             shape = 21) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black") +  # Reference line at 0
  labs(title = "Residuals vs. Region",
       x = "Region",
       y = "Residuals") +
  theme_bw() +
  theme(text = element_text(family = "courier"))

residuals_region

# variance of error across regions varies 
```

```{r}
residuals_cost <- ggplot(data = food, aes(x = cost_yr, y = resid(cost_lm))) +
  geom_point(color = "lightblue",
             fill = "indianred2",
             shape = 21) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black") +  # Reference line at 0
  labs(title = "Residuals vs. Food Cost",
       x = "Food Cost",
       y = "Residuals") +
  theme_bw() +
  theme(text = element_text(family = "courier"))

residuals_cost
```

```{r}
residuals_cost <- ggplot(data = food, aes(x = log_income, y = resid(cost_lm))) +
  geom_point(color = "lightblue",
             fill = "indianred2",
             shape = 21) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black") +  # Reference line at 0
  labs(title = "Residuals vs. log(income)",
       x = "log(income)",
       y = "Residuals") +
  theme_bw() +
  theme(text = element_text(family = "courier"))

residuals_cost
```

<!-- High level of multicollinearity between region and food cost, and between region and median_income but when adjusted for degrees of freedom, not severe enough to drop the predictors with the high VIF -->

<!-- # classify counties by region to make 5 level categorical variable -->

<!-- # if I had used the region_name col from original data the categorical variable would have 15 levels, as opposed to 5 if I follow the MPO region designations (Metropolitan Planning Organization) -->


<!-- #### Hypothesis: -->

<!-- median income, family size female-headed households -->

<!-- # should try removing the outliers in median_income and affordability food ratio -->

<!-- # in "ave_fam_size" all races are combined, race variable not ideal in model -->


